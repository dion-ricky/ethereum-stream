services:
  jobmanager:
    build: .
    ports:
      - "8081:8081"
    command: jobmanager
    expose:
      - "6123"
    depends_on:
      - kafka
      - postgres
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager

  taskmanager:
    build: .
    depends_on:
      - jobmanager
    command: taskmanager
    expose:
      - "6121"
      - "6122"
    scale: 1
    links:
      - jobmanager:jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2

  kafka:
    image: apache/kafka:3.9.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
    volumes:
      - kafka:/var/lib/kafka/data

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ethereum
      POSTGRES_USER: ethereum
      POSTGRES_PASSWORD: ethereum
    volumes:
      - postgres:/var/lib/postgresql/data

  datagen:
    build: producer/
    depends_on:
      - kafka
    profiles:
      - datagen

  # zookeeper:
  #   image: zookeeper:3.5.10
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     - ZOO_MY_ID=1

  # coordinator:
  #   image: apache/druid:32.0.0
  #   volumes:
  #     - druid_shared:/opt/shared
  #     - druid_coordinator_var:/opt/druid/var
  #   depends_on:
  #     - zookeeper
  #     - postgres
  #   ports:
  #     - "8081:8081"
  #   command:
  #     - coordinator

  # broker:
  #   image: apache/druid:32.0.0
  #   volumes:
  #     - druid_broker_var:/opt/druid/var
  #   depends_on:
  #     - zookeeper
  #     - postgres
  #     - coordinator
  #   ports:
  #     - "8082:8082"
  #   command:
  #     - broker

  # historical:
  #   image: apache/druid:32.0.0
  #   volumes:
  #     - druid_shared:/opt/shared
  #     - druid_historical_var:/opt/druid/var
  #   depends_on:
  #     - zookeeper
  #     - postgres
  #     - coordinator
  #   ports:
  #     - "8083:8083"
  #   command:
  #     - historical

  # middlemanager:
  #   image: apache/druid:32.0.0
  #   volumes:
  #     - druid_shared:/opt/shared
  #     - druid_middle_var:/opt/druid/var
  #   depends_on:
  #     - zookeeper
  #     - postgres
  #     - coordinator
  #   ports:
  #     - "8091:8091"
  #     - "8100-8105:8100-8105"
  #   command:
  #     - middleManager

  # router:
  #   image: apache/druid:32.0.0
  #   volumes:
  #     - druid_router_var:/opt/druid/var
  #   depends_on:
  #     - zookeeper
  #     - postgres
  #     - coordinator
  #   ports:
  #     - "8888:8888"
  #   command:
  #     - router

volumes:
  kafka:
  postgres:

  # druid_metadata:
  # druid_middle_var:
  # druid_historical_var:
  # druid_broker_var:
  # druid_coordinator_var:
  # druid_router_var:
  # druid_shared: